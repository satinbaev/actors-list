{"ast":null,"code":"var _jsxFileName = \"/Users/satinbaev/Desktop/movies/src/Modal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'green',\n  border: '2px solid black',\n  boxShadow: 24,\n  p: 4\n};\nexport default function Modal(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleClose = () => setOpen(false);\n\n  const modalData = props.modalData.filteredId[0];\n  const imagePart = \"https://image.tmdb.org/t/p/w185\";\n  const imageUrl = imagePart + modalData.profile_path;\n  console.log(open, \"button\");\n  const knownFor = props.modalData.filteredId[0].known_for.map(el => el.title);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: modalData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: knownFor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Modal, \"dVkDIfRb5RN4FjtonjBYYwpg89o=\");\n\n_c = Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/satinbaev/Desktop/movies/src/Modal.js"],"names":["React","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Modal","props","open","setOpen","useState","handleClose","modalData","filteredId","imagePart","imageUrl","profile_path","console","log","knownFor","known_for","map","el","title","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG;AACVC,EAAAA,QAAQ,EAAE,UADA;AAEVC,EAAAA,GAAG,EAAE,KAFK;AAGVC,EAAAA,IAAI,EAAE,KAHI;AAIVC,EAAAA,SAAS,EAAE,uBAJD;AAKVC,EAAAA,KAAK,EAAE,GALG;AAMVC,EAAAA,OAAO,EAAE,OANC;AAOVC,EAAAA,MAAM,EAAE,iBAPE;AAQVC,EAAAA,SAAS,EAAE,EARD;AASVC,EAAAA,CAAC,EAAE;AATO,CAAd;AAYA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACe,QAAN,CAAe,IAAf,CAAxB;;AACA,QAAMC,WAAW,GAAG,MAAMF,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAMG,SAAS,GAAGL,KAAK,CAACK,SAAN,CAAgBC,UAAhB,CAA2B,CAA3B,CAAlB;AACA,QAAMC,SAAS,GAAG,iCAAlB;AACA,QAAMC,QAAQ,GAAED,SAAS,GAAEF,SAAS,CAACI,YAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAAkB,QAAlB;AACA,QAAMW,QAAQ,GAAGZ,KAAK,CAACK,SAAN,CAAgBC,UAAhB,CAA2B,CAA3B,EAA8BO,SAA9B,CAAwCC,GAAxC,CAA4CC,EAAE,IAAGA,EAAE,CAACC,KAApD,CAAjB;AAEA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAEZ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKC,SAAS,CAACY;AAAf;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,GAAG,EAAET;AAAV;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAlBuBb,K;;KAAAA,K","sourcesContent":["import React from 'react';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'green',\n    border: '2px solid black',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport default function Modal(props){\n    const [open, setOpen] = React.useState(true);\n    const handleClose = () => setOpen(false);\n    const modalData = props.modalData.filteredId[0]\n    const imagePart = \"https://image.tmdb.org/t/p/w185\"\n    const imageUrl =imagePart +modalData.profile_path\n    console.log(open, \"button\")\n    const knownFor = props.modalData.filteredId[0].known_for.map(el=> el.title)\n    \n    return (\n        <div>\n            <button onClick={handleClose}>Close</button>\n            <h1>{modalData.name}</h1>  \n            <img src={imageUrl}></img>\n            <div>{knownFor}</div>\n        </div>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}